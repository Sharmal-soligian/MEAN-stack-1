{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/teacher.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction DashboardComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const teacher_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(teacher_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(teacher_r1.experience);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(teacher_r1.previousEmployer);\n  }\n}\nconst _c0 = function () {\n  return [\"/dashboard\"];\n};\nconst _c1 = function () {\n  return [\"/dashboard/create\"];\n};\nexport class DashboardComponent {\n  constructor(teacherService) {\n    this.teacherService = teacherService;\n    this.teachers = [];\n  }\n  ngOnInit() {\n    this.getTeacher();\n  }\n  getTeacher() {\n    this.teacherService.getTeacher().subscribe(res => {\n      console.log('Response for getting teachers', res);\n      this.teachers = res;\n    }, err => {\n      console.log('Error while getting teachers', err);\n    }, () => {\n      console.log('Completed getting teachers');\n    });\n  }\n}\n_class = DashboardComponent;\n_class.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TeacherService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-dashboard\"]],\n  decls: 18,\n  vars: 5,\n  consts: [[1, \"navbar\", \"navbar-expand\", \"navbar-light\", \"bg-light\"], [1, \"nav\", \"navbar-nav\"], [1, \"navbar-brand\", 3, \"routerLink\"], [1, \"nav-item\", \"nav-link\", 3, \"routerLink\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"a\", 2);\n      i0.ɵɵtext(3, \"Teachers List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"a\", 3);\n      i0.ɵɵtext(5, \"Create teacher\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"table\", 4)(7, \"thead\")(8, \"tr\")(9, \"th\");\n      i0.ɵɵtext(10, \"Name of Teacher\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Experience\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Previous Employer\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"tbody\");\n      i0.ɵɵtemplate(16, DashboardComponent_tr_16_Template, 7, 3, \"tr\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(17, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c1));\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.teachers);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterOutlet, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAgBIA,0BAAoD;IAC9CA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAwB;IAAAA,iBAAK;IACjCA,0BAAI;IAAAA,YAA8B;IAAAA,iBAAK;;;;IAFnCA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAwB;IAAxBA,2CAAwB;IACxBA,eAA8B;IAA9BA,iDAA8B;;;;;;;;;ACXxC,OAAM,MAAOC,kBAAkB;EAI7BC,YACUC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAHxB,aAAQ,GAAU,EAAE;EAMpB;EAEAC,QAAQ;IACJ,IAAI,CAACC,UAAU,EAAE;EACrB;EAEAA,UAAU;IACR,IAAI,CAACF,cAAc,CAACE,UAAU,EAAE,CAACC,SAAS,CACvCC,GAAG,IAAI;MACNC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,GAAG,CAAC;MACjD,IAAI,CAACG,QAAQ,GAAGH,GAAG;IACrB,CAAC,EACAI,GAAQ,IAAI;MACXH,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEE,GAAG,CAAC;IAClD,CAAC,EACD,MAAK;MACHH,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,CACF;EACH;;SA3BWR,kBAAkB;;mBAAlBA,MAAkB;AAAA;;QAAlBA,MAAkB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR/BhB,8BAAwD;MAEMA,6BAAa;MAAAA,iBAAI;MACvEA,4BAAkE;MAAAA,8BAAc;MAAAA,iBAAI;MAI5FA,gCAAqB;MAGXA,gCAAe;MAAAA,iBAAK;MACxBA,2BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MACnBA,2BAAI;MAAAA,kCAAiB;MAAAA,iBAAK;MAG9BA,8BAAO;MACLA,mEAIK;MACPA,iBAAQ;MAGVA,iCAA+B;;;MAtBCA,eAA6B;MAA7BA,uDAA6B;MACxBA,eAAoC;MAApCA,uDAAoC;MAa7CA,gBAAa;MAAbA,sCAAa","names":["i0","DashboardComponent","constructor","teacherService","ngOnInit","getTeacher","subscribe","res","console","log","teachers","err","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Real project\\client\\src\\app\\components\\dashboard\\dashboard.component.html","D:\\Real project\\client\\src\\app\\components\\dashboard\\dashboard.component.ts"],"sourcesContent":["<nav class=\"navbar navbar-expand navbar-light bg-light\">\n    <div class=\"nav navbar-nav\">\n        <a class=\"navbar-brand\" [routerLink]=\"['/dashboard']\">Teachers List</a>\n        <a class=\"nav-item nav-link\" [routerLink]=\"['/dashboard/create']\">Create teacher</a>\n    </div>\n</nav>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Name of Teacher</th>\n      <th>Experience</th>\n      <th>Previous Employer</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let teacher of teachers; let i = index\">\n      <td>{{ teacher.name }}</td>\n      <td>{{ teacher.experience }}</td>\n      <td>{{ teacher.previousEmployer }}</td>\n    </tr>\n  </tbody>\n</table>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { TeacherService } from 'src/app/services/teacher.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  teachers: any[] = [];\n\n  constructor(\n    private teacherService: TeacherService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n      this.getTeacher();\n  }\n\n  getTeacher() {\n    this.teacherService.getTeacher().subscribe(\n      (res) => {\n        console.log('Response for getting teachers', res);\n        this.teachers = res;\n      },\n      (err: any) => {\n        console.log('Error while getting teachers', err);\n      },\n      () => {\n        console.log('Completed getting teachers');\n      }\n    );\n  };\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}