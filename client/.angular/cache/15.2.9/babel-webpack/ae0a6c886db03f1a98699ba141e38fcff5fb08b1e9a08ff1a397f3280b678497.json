{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { Teacher } from 'src/model/teacher.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/teacher.service\";\nexport class CreateComponent {\n  constructor(fb, router, route, teacherService) {\n    this.fb = fb;\n    this.router = router;\n    this.route = route;\n    this.teacherService = teacherService;\n    this.submitted = false;\n    this.createForm = this.fb.group({\n      name: ['', [Validators.required]],\n      experience: ['', [Validators.required]],\n      previousEmployer: ['', [Validators.required]]\n    });\n    this.teacher = new Teacher();\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      let id = params['id'];\n      if (id !== undefined) {\n        this.teacherService.getTeacherid(id).subscribe(res => {\n          this.teacher = res;\n        });\n      }\n    });\n  }\n  // subCreate() {\n  //   this.submitted = true;\n  //   if(this.createForm.valid) {\n  //     if(this.teacher?._id !== undefined) {\n  //       this.teacherService.updateTeacher(this.teacher).subscribe(\n  //         (res: any) => {\n  //           if(res.status === 200) {\n  //             this.router.navigate(['/dashboard']);\n  //           }\n  //         }\n  //       )\n  //     } else {\n  //       this.teacherService.createTeacher(this.teacher).subscribe(\n  //         (res : any) => {\n  //           if(res.status === 201) {\n  //             this.router.navigate(['/dashboard']);\n  //           }\n  //         }\n  //       )\n  //     }\n  //   };\n  // };\n  subCreate() {\n    this.submitted = true;\n    if (this.createForm.valid) {\n      const teacherData = this.createForm.value;\n      if (this.teacher?._id !== undefined) {\n        teacherData._id = this.teacher._id;\n        this.teacherService.updateTeacher(teacherData).subscribe(res => {\n          if (res.status === 200) {\n            this.router.navigate(['/dashboard']);\n          }\n        }, error => {\n          console.error('Error updating teacher:', error);\n        });\n      } else {\n        this.teacherService.createTeacher(teacherData).subscribe(res => {\n          if (res.status === 201) {\n            this.router.navigate(['/dashboard']);\n          }\n        }, error => {\n          console.error('Error creating teacher:', error);\n        });\n      }\n    }\n  }\n}\n_class = CreateComponent;\n_class.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.TeacherService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-create\"]],\n  decls: 16,\n  vars: 1,\n  consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"\", \"id\", \"\", \"formControlName\", \"name\", \"placeholder\", \"\", \"aria-describedby\", \"helpId\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"\", \"id\", \"\", \"formControlName\", \"experience\", \"placeholder\", \"\", \"aria-describedby\", \"helpId\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"\", \"id\", \"\", \"formControlName\", \"previousEmployer\", \"placeholder\", \"\", \"aria-describedby\", \"helpId\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.subCreate();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 3);\n      i0.ɵɵtext(8, \"Experience\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 3);\n      i0.ɵɵtext(12, \"Previous employer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 7);\n      i0.ɵɵtext(15, \"Create\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.createForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Teacher","CreateComponent","constructor","fb","router","route","teacherService","createForm","group","name","required","experience","previousEmployer","teacher","ngOnInit","params","subscribe","id","undefined","getTeacherid","res","subCreate","submitted","valid","teacherData","value","_id","updateTeacher","status","navigate","error","console","createTeacher","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\Real project\\client\\src\\app\\components\\create\\create.component.ts","D:\\Real project\\client\\src\\app\\components\\create\\create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TeacherService } from 'src/app/services/teacher.service';\nimport { Teacher } from 'src/model/teacher.model';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent implements OnInit {\n  teacher: Teacher;\n  createForm: FormGroup;\n  submitted: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private teacherService: TeacherService\n  ) {\n      this.createForm = this.fb.group({\n        name: ['', [Validators.required]],\n        experience: ['', [Validators.required]],\n        previousEmployer: ['', [Validators.required]]\n      })\n      this.teacher = new Teacher();\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      let id = params['id'];\n      if(id !== undefined) {\n        this.teacherService.getTeacherid(id).subscribe(res => {\n          this.teacher = res;\n        })\n      }\n    })\n  }\n\n  // subCreate() {\n  //   this.submitted = true;\n  //   if(this.createForm.valid) {\n  //     if(this.teacher?._id !== undefined) {\n  //       this.teacherService.updateTeacher(this.teacher).subscribe(\n  //         (res: any) => {\n  //           if(res.status === 200) {\n  //             this.router.navigate(['/dashboard']);\n  //           }\n  //         }\n  //       )\n  //     } else {\n  //       this.teacherService.createTeacher(this.teacher).subscribe(\n  //         (res : any) => {\n  //           if(res.status === 201) {\n  //             this.router.navigate(['/dashboard']);\n  //           }\n  //         }\n  //       )\n  //     }\n  //   };\n  // };\n\n\n  subCreate() {\n    this.submitted = true;\n\n    if (this.createForm.valid) {\n      const teacherData: Teacher = this.createForm.value;\n\n      if (this.teacher?._id !== undefined) {\n        teacherData._id = this.teacher._id;\n\n        this.teacherService.updateTeacher(teacherData).subscribe(\n          (res: any) => {\n            if (res.status === 200) {\n              this.router.navigate(['/dashboard']);\n            }\n          },\n          (error: any) => {\n            console.error('Error updating teacher:', error);\n          }\n        );\n      } else {\n        this.teacherService.createTeacher(teacherData).subscribe(\n          (res: any) => {\n            if (res.status === 201) {\n              this.router.navigate(['/dashboard']);\n            }\n          },\n          (error: any) => {\n            console.error('Error creating teacher:', error);\n          }\n        );\n      }\n    }\n  }\n\n\n\n}\n","<div class=\"container\">\n  <form [formGroup]=\"createForm\" (ngSubmit)=\"subCreate()\">\n    <div class=\"mb-3\">\n      <label for=\"\" class=\"form-label\">Name</label>\n      <input type=\"text\" name=\"\" id=\"\" class=\"form-control\" formControlName=\"name\" placeholder=\"\" aria-describedby=\"helpId\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"\" class=\"form-label\">Experience</label>\n      <input type=\"text\" name=\"\" id=\"\" class=\"form-control\"formControlName=\"experience\" placeholder=\"\" aria-describedby=\"helpId\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"\" class=\"form-label\">Previous employer</label>\n      <input type=\"text\" name=\"\" id=\"\" class=\"form-control\" formControlName=\"previousEmployer\" placeholder=\"\" aria-describedby=\"helpId\">\n    </div>\n\n    <button class=\"btn btn-primary\" type=\"submit\">Create</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}