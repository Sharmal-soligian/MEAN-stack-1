{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { catchError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.baseUrl;\n    this.headers = new HttpHeaders({\n      'content-type': 'application/json'\n    });\n  }\n  // Get users\n  getUsers() {\n    return this.http.get(`${this.apiUrl}/login`);\n  }\n  // Create user\n  createUser(auth) {\n    return this.http.post(`${this.apiUrl}/login`, auth, {\n      headers: this.headers,\n      observe: 'response'\n    }).pipe(catchError(error => {\n      console.error('Error creating user', error);\n      throw error;\n    }));\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAAA,SAAqBA,WAAW,QAAsB,sBAAsB;AAE5E,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,WAAW;EAOtBC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANN,WAAM,GAAGH,WAAW,CAACI,OAAO;IACpC,YAAO,GAAgB,IAAIN,WAAW,CAAC;MACrC,cAAc,EAAE;KACjB,CAAC;EAIE;EAEJ;EACAO,QAAQ;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACC,MAAM,QAAQ,CAAC;EACrD;EAEA;EACAC,UAAU,CAACC,IAAU;IACnB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAoB,GAAG,IAAI,CAACH,MAAM,QAAQ,EAAEE,IAAI,EAAE;MACrEE,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,OAAO,EAAE;KACV,CAAC,CAACC,IAAI,CACLd,UAAU,CAACe,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;;SA3BWb,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAe,SAAXf,MAAW;EAAAgB,YAFV;AAAM","names":["HttpHeaders","catchError","environment","AuthService","constructor","http","baseUrl","getUsers","get","apiUrl","createUser","auth","post","headers","observe","pipe","error","console","factory","providedIn"],"sourceRoot":"","sources":["D:\\Real project\\client\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Auth } from 'src/model/auth.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private apiUrl = environment.baseUrl;\n  headers: HttpHeaders = new HttpHeaders({\n    'content-type': 'application/json'\n  });\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  // Get users\n  getUsers(): Observable<any> {\n    return this.http.get<any[]>(`${this.apiUrl}/login`)\n  };\n\n  // Create user\n  createUser(auth: Auth): Observable<HttpResponse<any>> {\n    return this.http.post<HttpResponse<any>>(`${this.apiUrl}/login`, auth, {\n      headers: this.headers,\n      observe: 'response'\n    }).pipe(\n      catchError(error => {\n        console.error('Error creating user', error);\n        throw error;\n      })\n    )\n  };\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}